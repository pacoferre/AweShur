@{
    int? idappuser = AppUser.IDAppUser(Context);
    AppUser currentUser = AppUser.GetAppUser(Context);

    Layout = "";
}
<link rel="import" href="/lib/polymer/polymer.html">
<link rel="import" href="/lib/app-route/app-location.html">
<link rel="import" href="/lib/app-route/app-route.html">
<link rel="import" href="/lib/app-layout/app-scroll-effects/app-scroll-effects.html">
<link rel="import" href="/lib/app-layout/app-layout.html">
<link rel="import" href="/lib/app-layout/app-drawer-layout/app-drawer-layout.html">
<link rel="import" href="/lib/app-layout/app-drawer/app-drawer.html">
<link rel="import" href="/lib/app-layout/app-header/app-header.html">
<link rel="import" href="/lib/app-layout/app-header-layout/app-header-layout.html">
<link rel="import" href="/lib/app-layout/app-toolbar/app-toolbar.html">
<link rel="import" href="/lib/paper-icon-button/paper-icon-button.html">
<link rel="import" href="/lib/iron-pages/iron-pages.html">
<link rel="import" href="/lib/iron-selector/iron-selector.html">

<link rel="import" href="/elements/lib/awsl-listeditor/awsl-listeditor.html">

<dom-module id="aswd-main">
    <template>
        <style>
            :host {
                display: block;
                --app-primary-color: #4285f4;
                --app-secondary-color: black;
            }

            app-header {
                background-color: var(--app-primary-color);
                color: #fff;
            }

            app-header paper-icon-button {
                --paper-icon-button-ink-color: white;
            }

            .drawer-list {
                margin: 0 20px;
            }

            .drawer-list a {
                display: block;
                padding: 0 16px;
                line-height: 40px;
                text-decoration: none;
                color: var(--app-secondary-color);
            }

            .drawer-list a.iron-selected {
                color: black;
                font-weight: bold;
            }

            .drawer-list a.subroute {
                padding-left: 32px;
            }
        </style>

        <app-location use-hash-as-path route="{{route}}"></app-location>
        <app-route route="{{route}}" pattern="/:page" data="{{routeData}}" tail="{{subroute}}"></app-route>
        <app-drawer-layout fullbleed="" responsive-width="1024px">

            <app-drawer>
                <app-toolbar>Menu</app-toolbar>
                <iron-selector selected="[[page]]" attr-for-selected="name" class="drawer-list" role="navigation">
                    <a name="Customer" href="/#/Customer">Customers</a>
                    <a name="CustomerType" href="/#/CustomerType">Customer types</a>
                    @if (currentUser["su"].NoNullBool())
                    {
                    <a name="User" href="/#/User">Users</a>
                    <a name="Profile" href="/#/Profile">My profile</a>
                    }
                </iron-selector>
            </app-drawer>

            <app-header-layout has-scrolling-region="">
                <app-header condenses="" reveals="" effects="waterfall">
                    <app-toolbar>
                        <paper-icon-button icon="menu" drawer-toggle=""></paper-icon-button>
                        <div title="">[[MainTitle]]</div>
                        <div>Hello @currentUser.Description</div>
                        <paper-icon-button id="exit" icon="exit-to-app" on-tap="_exit"></paper-icon-button>
                    </app-toolbar>
                </app-header>
                <iron-pages role="main" selected="[[page]]" attr-for-selected="name" id="pages">
                    <app-customer name="Customer" oname="Customer" route="{{subroute}}"></app-customer>
                    <app-customertype name="CustomerType" oname="CustomerType" route="{{subroute}}"></app-customertype>
                    @if (currentUser["su"].NoNullBool())
                    {
                    <app-user name="User" oname="AppUser" route="{{subroute}}"></app-user>
                    <aswd-profile name="Profile"></aswd-profile>
                    }
                </iron-pages>
            </app-header-layout>
        </app-drawer-layout>
    </template>
    <script>
    Polymer({
        is: 'aswd-main',
        properties: {
            page: {
                type: String,
                reflectToAttribute: !0,
                observer: "_pageChanged"
            },
            route: {
                type: Object,
                notify: true
            }
        },
        listeners: {
            'awsl-set-title': '_onSetTitle',
        },
        observers: [
            "_routePageChanged(routeData.page)",
        ],
        _onSetTitle: function (newTitle) {
            this.MainTitle = newTitle.detail.title;
        },
        _routePageChanged: function (newPage) {
            if (newPage === undefined || newPage == "") {
                window.location = "/#/Customer";
                return;
            }
            this.page = newPage || "Customer";
        },
        _pageChanged: function (newPage) {

            var onload = function () {
                this.async(function () {
                    var showed = this.$.pages.children[this.$.pages.selected];

                    if (showed.refresh !== undefined) {
                        showed.refresh();
                    }
                });
            };

            if (newPage == "Profile") {
                this.importHref('@("/Elements/Load/Profile/UserProfile/AppUser/" + idappuser)', onload, null, !0)
            }
            else {
                this.importHref('@("/Elements/LoadTemplate/ListEdit/" + idappuser)' + '?e=' + newPage, onload, null, !0)
            }
        },
        _exit: function () {
            window.location = "/Home/Exit";
        },
    });
    </script>
</dom-module>
