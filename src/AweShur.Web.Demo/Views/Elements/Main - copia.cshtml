@{
    int? idappuser = AppUser.IDAppUser(Context);

    string firstMenu = "Users";
}
<link rel="import" href="/lib/polymer/polymer.html">
<link rel="import" href="/lib/app-route/app-location.html">
<link rel="import" href="/lib/app-route/app-route.html">
<link rel="import" href="/lib/app-layout/app-scroll-effects/app-scroll-effects.html">
<link rel="import" href="/lib/app-layout/app-layout.html">
<link rel="import" href="/elements/lib/awsl-listeditor/awsl-listeditor.html">

<link rel="import" href="@("/Elements/Load/Profile/UserProfile/" + idappuser)">

<dom-module id="aswd-main">
    <template>
        <style>
            paper-menu {
                background-color: #fafafa;
            }

            app-header {
              background-color: #4285f4;
              color: #fff;
            }
            app-header paper-icon-button {
              --paper-icon-button-ink-color: #fff;
            }
            app-drawer-layout {
              --app-drawer-layout-content-transition: margin 0.2s;
            }
            app-drawer {
              --app-drawer-content-container: {
                background-color: #eee;
              }
            }
            .drawer-content {
              margin-top: 64px;
              height: calc(100vh - 64px);
              overflow: auto;
            }
            
            .page-title {
              font-size: 24px !important;
            }

            paper-menu {
                background-color: #eee;
            }

            paper-menu a > *, paper-menu paper-item > *, paper-menu paper-icon-item > * {
                pointer-events: none;
            }

            @@media (max-width: 600px) {
                .page-title {
                    font-size: 22px !important;
                }
            }
        </style>
        <app-location use-hash-as-path route="{{route}}" id="lation"></app-location>

        <!-- Two routes, one for the home page, and one for the tabs page. -->
        <app-route route="{{route}}" pattern="/:actual" data="{{data}}"></app-route>

        <app-header-layout>
            <app-drawer-layout id="drawerLayout">
                <app-drawer swipe-open>
                    <paper-menu selected="{{data.actual}}" attr-for-selected='key' selectable="paper-icon-item"
                                class="drawer-content">
                        <paper-icon-item role="menuitem" key="Users" on-tap="menuSelected">
                            <iron-icon icon="social:people" item-icon></iron-icon><span>Users</span>
                        </paper-icon-item>
                        <paper-icon-item role="menuitem" key="Customers" on-tap="menuSelected">
                            <iron-icon icon="social:people" item-icon></iron-icon><span>Customers</span>
                        </paper-icon-item>
                        <paper-icon-item role="menuitem" key="CustomerTypes" on-tap="menuSelected">
                            <iron-icon icon="social:people" item-icon></iron-icon><span>Customer Types</span>
                        </paper-icon-item>
                        <paper-icon-item role="menuitem" key="MyProfile" on-tap="menuSelected">
                            <iron-icon icon="social:people" item-icon></iron-icon><span>My profile</span>
                        </paper-icon-item>
                    </paper-menu>
                </app-drawer>

                <iron-pages selected="{{data.actual}}" attr-for-selected='key'>
                    <div key="Users">
                        <awsl-listeditor id="users" oname="AppUser"
                                            listhref='@("/Elements/Load/Security/UserListItem/" + idappuser)' listelement="aswd-userlistitem"
                                            edithref='@("/Elements/Load/Security/UserEdit/" + idappuser)' editelement="aswd-useredit"></awsl-listeditor>
                    </div>
                    <div key="Customers">
                        <awsl-listeditor id="custs" oname="Customer"
                                         listhref='@("/Elements/Load/Customer/CustomerListItem/" + idappuser)' listelement="aswd-customerlistitem"
                                         edithref='@("/Elements/Load/Customer/CustomerEdit/" + idappuser)' editelement="aswd-customeredit"></awsl-listeditor>
                    </div>
                    <div key="CustomerTypes">
                        <awsl-listeditor id="ctypes" oname="CustomerType"
                                         listhref='@("/Elements/Load/Simple/SimpleListItem/" + idappuser)' listelement="aswd-simplelistitem"
                                         edithref='@("/Elements/Load/Simple/SimpleEdit/" + idappuser)' editelement="aswd-simpleedit"></awsl-listeditor>
                    </div>
                    <div key="MyProfile">
                        <aswd-profile></aswd-profile>
                    </div>
                </iron-pages>
            </app-drawer-layout>

            <app-header fixed effects="waterfall">
                <app-toolbar>
                    <paper-icon-button id="toggle" icon="menu"></paper-icon-button>
                    <div title class="page-title">{{computeFullName(data.actual)}}</div>
                    @if (AppUser.UserIsAuthenticated(Context))
                    {
                        <div>Hello @AppUser.GetAppUser(Context).Description</div>
                    }
                    <paper-icon-button id="exit" icon="exit-to-app" on-tap="_exit"></paper-icon-button>
                </app-toolbar>
            </app-header>

        </app-header-layout>
    </template>
    <script>
    Polymer({
        is: 'aswd-main',
        properties: {
            route: {
                type: Object,
            },
            data: {
                type: Object,
            },
        },
        _exit: function () {
            window.location = "/Home/Exit";
        },
        menuSelected: function (e) {
            var key = e.currentTarget.getAttribute('key');

            if (key == "Users")
            {
                this.$.users.reset();
            }
        },
        computeFullName: function (key) {
            if (key === undefined)
            {
                return "";
            }
            return key.replace(/_/g, " ");
        },
        ready: function() {
            var drawerLayout = this.$.drawerLayout;
            this.$.toggle.addEventListener('tap', function () {
                if (drawerLayout.forceNarrow || !drawerLayout.narrow) {
                    drawerLayout.forceNarrow = !drawerLayout.forceNarrow;
                } else {
                    drawerLayout.drawer.toggle();
                }
            });
            this.async(function () {
                if (!this.route.path) {
                    this.set('data.actual', '@(firstMenu)');
                    window.location = ("" + window.location).replace(/\#.*$/, "") + '@("#/" + firstMenu)';
                }
            });
        },
    });
    </script>
</dom-module>
